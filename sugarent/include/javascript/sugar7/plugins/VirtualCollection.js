/*
     * Your installation or use of this SugarCRM file is subject to the applicable
     * terms available at
     * http://support.sugarcrm.com/06_Customer_Center/10_Master_Subscription_Agreements/.
     * If you do not agree to all of the applicable terms or do not have the
     * authority to bind the entity as an authorized representative, then do not
     * install or use this SugarCRM file.
     *
     * Copyright (C) SugarCRM Inc. All rights reserved.
     */
(function(app){app.events.on('app:init',function(){var BeanOverrides,Link,VirtualCollection;Link=app.BeanCollection.extend({initialize:function(models,options){options||(options={});if(options.module){this.module=options.module;delete options.module;}
this.defaults=[];app.BeanCollection.prototype.initialize.call(this,models,options);},isDefault:function(model){return _.contains(this.defaults,model.id);},transpose:function(){var actions;actions=this.reduce(function(json,model){switch(model.get('_action')){case'delete':json.delete.push(model.id);break;default:json.add.push(model.id);}
return json;},{add:[],delete:[]});if(actions.add.length===0){delete actions.add;}
if(actions.delete.length===0){delete actions.delete;}
return actions;},linkRecord:function(model){model.set('_action',this.isDefault(model)?'update':'create');this.add(model,{merge:true});return this;},unlinkRecord:function(model){if(this.isDefault(model)){model.set('_action','delete');this.add(model,{merge:true});}else{this.undo(model);}
return this;},undo:function(model){this.remove(model);return this;},setDefaults:function(models){var undos=[];this.defaults=_.isArray(models)?models.slice():this.pluck('id');this.each(function(model){if(_.contains(this.defaults,model.id)){undos.push(model);}},this);_.each(undos,this.undo,this);return this;},clearAndUpdateDefaults:function(){var linked,unlinked;linked=_.union(this.where({'_action':'create'}),this.where({'_action':'update'}));unlinked=this.where({'_action':'delete'});this.setDefaults(_.union(this.defaults,_.pluck(linked,'id')));this.setDefaults(_.difference(this.defaults,_.pluck(unlinked,'id')));return this;},addDefault:function(model){this.defaults.push(model.id);this.undo(model);return this;}},false);VirtualCollection=app.MixedBeanCollection.extend({constructor:function(models,options){options||(options={});app.MixedBeanCollection.prototype.constructor.call(this,models,options);this.offsets=options.offsets||{};_.each(this.links,function(link){link.setDefaults();if(_.isUndefined(this.offsets[link.link.name])){this.offsets[link.link.name]=link.defaults.length;}},this);},initialize:function(models,options){options||(options={});this.parent=options.parent;delete options.parent;this.fieldName=options.fieldName;delete options.fieldName;this.context=options.context;delete options.context;this.relatedModules={};this.links=_.reduce(options.links,function(memo,link){var module,options;module=app.data.getRelatedModule(this.parent.module,link);this.relatedModules[module]=link;options={link:{name:link,bean:this.parent},module:module};memo[link]=new Link([],options);return memo;},{},this);delete options.links;this.parent.on('sync',function(){_.each(this.links,function(link){link.clearAndUpdateDefaults();});},this);app.MixedBeanCollection.prototype.initialize.call(this,models,options);},_prepareModel:function(model,options){model=app.MixedBeanCollection.prototype._prepareModel.call(this,model,options);model.link=this.links[this.relatedModules[model.module]].link;return model;},add:function(models,options){var added=[];options||(options={});models=_.isArray(models)?models.slice():[models];if(_.compact(models).length===0){return this;}
_.each(models,function(model){var existingModel,relationship;model=this._prepareModel(model,options);existingModel=this.get(model.id);relationship=this.links[model.link.name];if(existingModel){if(options.merge){relationship.linkRecord(model);}}else{if(relationship.isDefault(model)){relationship.undo(model);}else{relationship.linkRecord(model);}}
if(!existingModel||options.merge){app.MixedBeanCollection.prototype.add.call(this,model,options);added.push(this.get(model.id));}},this);if(!options.silent&&added.length>0){this._triggerChange(added,options);}
return this;},remove:function(models,options){var removed=[];options||(options={});models=_.isArray(models)?models.slice():[models];if(_.compact(models).length===0){return this;}
_.each(models,function(model){var existingModel,relationship;existingModel=this.get(model);if(existingModel){relationship=this.links[existingModel.link.name];relationship.unlinkRecord(existingModel);app.MixedBeanCollection.prototype.remove.call(this,existingModel,options);removed.push(existingModel);}},this);if(!options.silent&&removed.length>0){this._triggerChange(removed,options);}
return this;},reset:function(models,options){var existingModels;options||(options={});models=_.isArray(models)?models.slice():[models];this.revert(_.extend({},options,{silent:true}));existingModels=this.models.slice();app.MixedBeanCollection.prototype.reset.call(this,models,options);_.each(existingModels,function(existingModel){var relationship=this.links[existingModel.link.name];function match(newModel){return(newModel.id===existingModel.id&&newModel.module===existingModel.module);}
relationship.undo(existingModel);if(!this.find(match)){relationship.unlinkRecord(existingModel);}},this);if(!options.silent){this._triggerChange(this.models,options);}
return this;},revert:function(options){var add,remove;options||(options={});add=[];remove=[];_.each(this.links,function(relationship){relationship.each(function(model){if(relationship.isDefault(model)){add.push(model);}else{remove.push(model);}});});this.remove(remove,{silent:true});this.add(add,{merge:true,silent:true});if(!options.silent){this._triggerChange(this.models,options);this.trigger('reset',this,options);}
return this;},hasChanged:function(){var changed=false;_.each(this.links,function(link){if(link.length>0){changed=true;}},this);return changed;},hasMore:function(){return _.some(this.offsets,function(offset){return(offset>-1);});},fetch:function(options){var callbacks,complete,error,params,success,url;options||(options={});params={};params.fields=options.fields?options.fields:['name'];params.order_by=options.order_by||this.parent.fields[this.fieldName].order_by;if(!_.isArray(params.order_by)){params.order_by=[params.order_by];}
_.each(params.order_by,function(sort){var field=sort.split(':')[0];if(!_.contains(params.fields,field)){params.fields.push(field);}});params.module_list=_.keys(this.relatedModules).join(',');params.fields=params.fields.join(',');params.order_by=params.order_by.join(',');params.max_num=options.limit||app.config.maxSubpanelResult;if(options.offset){params.offset=options.offset;}
callbacks={};success=options.success;error=options.error;complete=options.complete;callbacks.success=_.bind(function(data,request){if(success){success(data,request);}
this.parent.trigger('sync:'+this.fieldName,this,data,options,request);},this);if(error){callbacks.error=error;}
if(complete){callbacks.complete=complete;}
url=[app.api.serverUrl,this.parent.module,this.parent.id,'collection',this.fieldName].join('/');_.each(params,function(value,key){if(value===null||value===undefined){delete params[key];}});params=$.param(params);if(params.length>0){url+='?'+params;}
return app.api.call('read',url,null,callbacks);},paginate:function(options){var success;options||(options={});options.offset=this.offsets;success=options.success;options.success=_.bind(function(data,request){var offsets,records;data||(data={});records=data.records||[];offsets=data.next_offset||{};_.each(offsets,function(offset,link){this.offsets[link]=offset;},this);this.add(records,{merge:true});_.each(records,function(record){var model;model=this._prepareModel(record);this.links[model.link.name].addDefault(model);},this);if(success){success(data,request);}},this);this.fetch(options);},search:function(options){var callbacks,params,url;params={};options||(options={});params.q=options.query;params.max_num=options.limit;params.search_fields=options.search_fields?options.search_fields.join(','):'name';params.fields=options.fields?options.fields.join(','):'name';if(this.links){params.module_list=_.map(this.links,function(link){return link.module;}).join(',');}
callbacks={};callbacks.success=function(data,request){if(options.success){options.success(app.data.createMixedBeanCollection(data.records),request);}};if(options.error){callbacks.error=options.error;}
if(options.complete){callbacks.complete=options.complete;}
url=app.api.buildURL('Calendar','invitee_search',null,params);return app.api.call('read',url,null,callbacks);},_triggerChange:function(change,options){this.parent.trigger('change:'+this.fieldName,this.parent,this,change,options);this.parent.trigger('change',this,options);}});BeanOverrides=function(model){this.model=model;};BeanOverrides.prototype.toJSON=function(collections,links,options){var json={},fields=_.unique(_.union(collections,_.keys(links)));_.each(fields,function(attribute){var field=this.get(attribute);if(!field){return;}
if(_.contains(collections,attribute)){json[attribute]=field.toJSON(options);}
_.each(links[attribute],function(link){var actions=field.links[link].transpose();if(actions.add||actions.delete){json[link]=actions;}});},this.model);return json;};BeanOverrides.prototype.copy=function(source,fields,options){var attrs,clone,vardefs;attrs={};vardefs=app.metadata.getModule(this.model.module).fields;clone=function(model){var attributes=_.clone(model.attributes);delete attributes._action;return attributes;};_.each(fields,function(name){attrs[name]=[];});if(_.size(attrs)>0){this.model.set(attrs,options);}
_.each(fields,function(name){var def=vardefs[name],collection;if(def&&def.duplicate_on_record_copy!=='no'&&(def.duplicate_on_record_copy==='always'||!def.auto_increment)&&source.has(name)){collection=this.get(name);collection.add(source.get(name).map(clone));}},this.model);};BeanOverrides.prototype.set=function(attr,options){_.each(attr,function(models,key){var collection;options=_.extend({},options,{parent:this,fieldName:key,links:this.fields[key].links});if(!_.isArray(models)){if(models instanceof Backbone.Collection){models=models.models;}else if(models){if(models.next_offset){options.offsets=models.next_offset;}
if(models.records){models=models.records;}else{models=[models];}}else{models=[];}}
collection=new VirtualCollection(models,options);this.attributes[key]=collection;this.setDefault(key,collection);},this.model);return this.model;};BeanOverrides.prototype.hasChanged=function(attr){if(attr==null){attr=this.model.getCollectionFieldNames();}else if(_.contains(this.model.getCollectionFieldNames(),attr)){attr=[attr];}else{attr=[];}
return _.some(attr,function(attribute){var collection=this.get(attribute);return(collection&&collection.hasChanged());},this.model);};BeanOverrides.prototype.changedAttributes=function(diff){var changed={};_.each(this.model.getCollectionFieldNames(),function(attr){var collection=this.get(attr);if(collection&&collection.hasChanged()){changed[attr]=collection;}},this.model);return changed;};BeanOverrides.prototype.revertAttributes=function(options){_.each(this.model.getCollectionFieldNames(),function(attr){var collection=this.get(attr);if(collection){collection.revert(options);}},this.model);};BeanOverrides.prototype.getSyncedAttributes=function(){var syncedAttributes={};_.reduce(this.model.getCollectionFieldNames(),function(memo,attr){var collection=this.get(attr);if(collection){memo[attr]=collection;}},syncedAttributes,this.model);return syncedAttributes;};app.plugins.register('VirtualCollection',['model'],{onAttach:function(model,plugin){var overrides=new BeanOverrides(this);this.toJSON=_.wrap(this.toJSON,function(_super,options){var attrs,fields,collectionFieldNames,collections,links,nonAttrFields,collectionsToJSON,attrToJSON;fields=(options&&options.fields)?options.fields:_.keys(this.attributes);collectionFieldNames=this.getCollectionFieldNames();collections=_.intersection(collectionFieldNames,fields);links={};nonAttrFields=_.clone(collections);_.each(collectionFieldNames,function(fieldName){var field=this.get(fieldName);if(_.isObject(field)&&field.links){_.each(field.links,function(link){if(_.contains(fields,link.link.name)){(links[fieldName]||(links[fieldName]=[])).push(link.link.name);nonAttrFields.push(link.link.name);}});}},this);attrs=_.difference(fields,_.unique(nonAttrFields));collectionsToJSON=overrides.toJSON(collections,links,options);attrToJSON=_super.call(this,_.extend({},options,{fields:attrs}));return _.extend(attrToJSON,collectionsToJSON);});this.copy=_.wrap(this.copy,function(_super,source,fields,options){var attrs,collections,collectionFieldNames,vardefs;vardefs=app.metadata.getModule(this.module).fields;fields=fields||_.pluck(vardefs,'name');collectionFieldNames=this.getCollectionFieldNames();collections=_.intersection(collectionFieldNames,fields);attrs=_.difference(fields,collectionFieldNames);overrides.copy(source,collections,options);_super.call(this,source,attrs,options);});this.set=_.wrap(this.set,function(_super,key,val,options){var attrs,collections;if(key==null){return this;}
if(typeof key==='object'){attrs=key;options=val;}else{(attrs={})[key]=val;}
options||(options={});collections=_.pick(attrs,this.getCollectionFieldNames());attrs=_.omit(attrs,_.keys(collections));overrides.set(collections,options);return _super.call(this,attrs,options);});this.hasChanged=_.wrap(this.hasChanged,function(_super,attr){return _super.call(this,attr)||overrides.hasChanged(attr);});this.changedAttributes=_.wrap(this.changedAttributes,function(_super,diff){var changed=_.extend(_super.call(this,diff)||{},overrides.changedAttributes(diff));return _.isEmpty(changed)?false:changed;});this.revertAttributes=_.wrap(this.revertAttributes,function(_super,options){overrides.revertAttributes(options);_super.call(this,options);});this.getSyncedAttributes=_.wrap(this.getSyncedAttributes,function(_super){return _.extend(app.utils.deepCopy(_super.call(this)||{}),overrides.getSyncedAttributes());});},getCollectionFieldNames:function(){return _.chain(this.fields).where({type:'collection'}).pluck('name').value();}});});})(SUGAR.App);