/*
     YUI 3.15.0 (build 834026e)
     Copyright 2014 Yahoo! Inc. All rights reserved.
     Licensed under the BSD License.
     http://yuilibrary.com/license/
     */
YUI.add('widget-buttons',function(Y,NAME){var YArray=Y.Array,YLang=Y.Lang,YObject=Y.Object,ButtonPlugin=Y.Plugin.Button,Widget=Y.Widget,WidgetStdMod=Y.WidgetStdMod,getClassName=Y.ClassNameManager.getClassName,isArray=YLang.isArray,isNumber=YLang.isNumber,isString=YLang.isString,isValue=YLang.isValue;function isNode(node){return!!node.getDOMNode;}
function WidgetButtons(){this._buttonsHandles={};}
WidgetButtons.ATTRS={buttons:{getter:'_getButtons',setter:'_setButtons',value:{}},defaultButton:{readOnly:true,value:null}};WidgetButtons.CLASS_NAMES={button:getClassName('button'),buttons:Widget.getClassName('buttons'),primary:getClassName('button','primary')};WidgetButtons.HTML_PARSER={buttons:function(srcNode){return this._parseButtons(srcNode);}};WidgetButtons.NON_BUTTON_NODE_CFG=['action','classNames','context','events','isDefault','section'];WidgetButtons.prototype={BUTTONS:{},BUTTONS_TEMPLATE:'<span />',DEFAULT_BUTTONS_SECTION:WidgetStdMod.FOOTER,initializer:function(){if(!this._stdModNode){Y.error('WidgetStdMod must be added to a Widget before WidgetButtons.');}
this._mapButtons(this.get('buttons'));this._updateDefaultButton();this.after({buttonsChange:Y.bind('_afterButtonsChange',this),defaultButtonChange:Y.bind('_afterDefaultButtonChange',this)});Y.after(this._bindUIButtons,this,'bindUI');Y.after(this._syncUIButtons,this,'syncUI');},destructor:function(){YObject.each(this._buttonsHandles,function(handle){handle.detach();});delete this._buttonsHandles;delete this._buttonsMap;delete this._defaultButton;},addButton:function(button,section,index){var buttons=this.get('buttons'),sectionButtons,atIndex;if(!isNode(button)){button=this._mergeButtonConfig(button);section||(section=button.section);}
section||(section=this.DEFAULT_BUTTONS_SECTION);sectionButtons=buttons[section]||(buttons[section]=[]);isNumber(index)||(index=sectionButtons.length);sectionButtons.splice(index,0,button);atIndex=YArray.indexOf(sectionButtons,button);this.set('buttons',buttons,{button:button,section:section,index:atIndex,src:'add'});return this;},getButton:function(name,section){if(!isValue(name)){return;}
var map=this._buttonsMap,buttons;section||(section=this.DEFAULT_BUTTONS_SECTION);if(isNumber(name)){buttons=this.get('buttons');return buttons[section]&&buttons[section][name];}
return arguments.length>1?map[section+':'+name]:map[name];},removeButton:function(button,section){if(!isValue(button)){return this;}
var buttons=this.get('buttons'),index;if(isNumber(button)){section||(section=this.DEFAULT_BUTTONS_SECTION);index=button;button=buttons[section][index];}else{if(isString(button)){button=this.getButton.apply(this,arguments);}
YObject.some(buttons,function(sectionButtons,currentSection){index=YArray.indexOf(sectionButtons,button);if(index>-1){section=currentSection;return true;}});}
if(button&&index>-1){buttons[section].splice(index,1);this.set('buttons',buttons,{button:button,section:section,index:index,src:'remove'});}
return this;},_bindUIButtons:function(){var afterContentChange=Y.bind('_afterContentChangeButtons',this);this.after({visibleChange:Y.bind('_afterVisibleChangeButtons',this),headerContentChange:afterContentChange,bodyContentChange:afterContentChange,footerContentChange:afterContentChange});},_createButton:function(button){var config,buttonConfig,nonButtonNodeCfg,i,len,action,context,handle;if(isNode(button)){return Y.one(button.getDOMNode()).plug(ButtonPlugin);}
config=Y.merge({context:this,events:'click',label:button.value},button);buttonConfig=Y.merge(config);nonButtonNodeCfg=WidgetButtons.NON_BUTTON_NODE_CFG;for(i=0,len=nonButtonNodeCfg.length;i<len;i+=1){delete buttonConfig[nonButtonNodeCfg[i]];}
button=ButtonPlugin.createNode(buttonConfig);context=config.context;action=config.action;if(isString(action)){action=Y.bind(action,context);}
handle=button.on(config.events,action,context);this._buttonsHandles[Y.stamp(button,true)]=handle;button.setData('name',this._getButtonName(config));button.setData('default',this._getButtonDefault(config));YArray.each(YArray(config.classNames),button.addClass,button);return button;},_getButtonContainer:function(section,create){var sectionClassName=WidgetStdMod.SECTION_CLASS_NAMES[section],buttonsClassName=WidgetButtons.CLASS_NAMES.buttons,contentBox=this.get('contentBox'),containerSelector,container;containerSelector='.'+sectionClassName+' .'+buttonsClassName;container=contentBox.one(containerSelector);if(!container&&create){container=Y.Node.create(this.BUTTONS_TEMPLATE);container.addClass(buttonsClassName);}
return container;},_getButtonDefault:function(button){var isDefault=isNode(button)?button.getData('default'):button.isDefault;if(isString(isDefault)){return isDefault.toLowerCase()==='true';}
return!!isDefault;},_getButtonName:function(button){var name;if(isNode(button)){name=button.getData('name')||button.get('name');}else{name=button&&(button.name||button.type);}
return name;},_getButtons:function(buttons){var buttonsCopy={};YObject.each(buttons,function(sectionButtons,section){buttonsCopy[section]=sectionButtons.concat();});return buttonsCopy;},_mapButton:function(button,section){var map=this._buttonsMap,name=this._getButtonName(button),isDefault=this._getButtonDefault(button);if(name){map[name]=button;map[section+':'+name]=button;}
isDefault&&(this._defaultButton=button);},_mapButtons:function(buttons){this._buttonsMap={};this._defaultButton=null;YObject.each(buttons,function(sectionButtons,section){var i,len;for(i=0,len=sectionButtons.length;i<len;i+=1){this._mapButton(sectionButtons[i],section);}},this);},_mergeButtonConfig:function(config){var buttonConfig,defConfig,name,button,tagName,label;config=isString(config)?{name:config}:Y.merge(config);if(config.srcNode){button=config.srcNode;tagName=button.get('tagName').toLowerCase();label=button.get(tagName==='input'?'value':'text');buttonConfig={disabled:!!button.get('disabled'),isDefault:this._getButtonDefault(button),name:this._getButtonName(button)};label&&(buttonConfig.label=label);Y.mix(config,buttonConfig,false,null,0,true);}
name=this._getButtonName(config);defConfig=this.BUTTONS&&this.BUTTONS[name];if(defConfig){Y.mix(config,defConfig,false,null,0,true);}
return config;},_parseButtons:function(srcNode){var buttonSelector='.'+WidgetButtons.CLASS_NAMES.button,sections=['header','body','footer'],buttonsConfig=null;YArray.each(sections,function(section){var container=this._getButtonContainer(section),buttons=container&&container.all(buttonSelector),sectionButtons;if(!buttons||buttons.isEmpty()){return;}
sectionButtons=[];buttons.each(function(button){sectionButtons.push({srcNode:button});});buttonsConfig||(buttonsConfig={});buttonsConfig[section]=sectionButtons;},this);return buttonsConfig;},_setButtons:function(config){var defSection=this.DEFAULT_BUTTONS_SECTION,buttons={};function processButtons(buttonConfigs,currentSection){if(!isArray(buttonConfigs)){return;}
var i,len,button,section;for(i=0,len=buttonConfigs.length;i<len;i+=1){button=buttonConfigs[i];section=currentSection;if(!isNode(button)){button=this._mergeButtonConfig(button);section||(section=button.section);}
button=this._createButton(button);section||(section=defSection);(buttons[section]||(buttons[section]=[])).push(button);}}
if(isArray(config)){processButtons.call(this,config);}else{YObject.each(config,processButtons,this);}
return buttons;},_syncUIButtons:function(){this._uiSetButtons(this.get('buttons'));this._uiSetDefaultButton(this.get('defaultButton'));this._uiSetVisibleButtons(this.get('visible'));},_uiInsertButton:function(button,section,index){var buttonsClassName=WidgetButtons.CLASS_NAMES.button,buttonContainer=this._getButtonContainer(section,true),sectionButtons=buttonContainer.all('.'+buttonsClassName);buttonContainer.insertBefore(button,sectionButtons.item(index));this.setStdModContent(section,buttonContainer,'after');},_uiRemoveButton:function(button,section,options){var yuid=Y.stamp(button,this),handles=this._buttonsHandles,handle=handles[yuid],buttonContainer,buttonClassName;if(handle){handle.detach();}
delete handles[yuid];button.remove();options||(options={});if(!options.preserveContent){buttonContainer=this._getButtonContainer(section);buttonClassName=WidgetButtons.CLASS_NAMES.button;if(buttonContainer&&buttonContainer.all('.'+buttonClassName).isEmpty()){buttonContainer.remove();this._updateContentButtons(section);}}},_uiSetButtons:function(buttons){var buttonClassName=WidgetButtons.CLASS_NAMES.button,sections=['header','body','footer'];YArray.each(sections,function(section){var sectionButtons=buttons[section]||[],numButtons=sectionButtons.length,buttonContainer=this._getButtonContainer(section,numButtons),buttonsUpdated=false,oldNodes,i,button,buttonIndex;if(!buttonContainer){return;}
oldNodes=buttonContainer.all('.'+buttonClassName);for(i=0;i<numButtons;i+=1){button=sectionButtons[i];buttonIndex=oldNodes.indexOf(button);if(buttonIndex>-1){oldNodes.splice(buttonIndex,1);if(buttonIndex!==i){buttonContainer.insertBefore(button,i+1);buttonsUpdated=true;}}else{buttonContainer.appendChild(button);buttonsUpdated=true;}}
oldNodes.each(function(button){this._uiRemoveButton(button,section,{preserveContent:true});buttonsUpdated=true;},this);if(numButtons===0){buttonContainer.remove();this._updateContentButtons(section);return;}
if(buttonsUpdated){this.setStdModContent(section,buttonContainer,'after');}},this);},_uiSetDefaultButton:function(newButton,oldButton){var primaryClassName=WidgetButtons.CLASS_NAMES.primary;if(newButton){newButton.addClass(primaryClassName);}
if(oldButton){oldButton.removeClass(primaryClassName);}},_uiSetVisibleButtons:function(visible){if(!visible){return;}
var defaultButton=this.get('defaultButton');if(defaultButton){defaultButton.focus();}},_unMapButton:function(button,section){var map=this._buttonsMap,name=this._getButtonName(button),sectionName;if(name){if(map[name]===button){delete map[name];}
sectionName=section+':'+name;if(map[sectionName]===button){delete map[sectionName];}}
if(this._defaultButton===button){this._defaultButton=null;}},_updateDefaultButton:function(){var defaultButton=this._defaultButton;if(this.get('defaultButton')!==defaultButton){this._set('defaultButton',defaultButton);}},_updateContentButtons:function(section){var sectionContent=this.getStdModNode(section).get('childNodes');this.set(section+'Content',sectionContent.isEmpty()?null:sectionContent,{src:'buttons'});},_afterButtonsChange:function(e){var buttons=e.newVal,section=e.section,index=e.index,src=e.src,button;if(src==='add'){button=buttons[section][index];this._mapButton(button,section);this._updateDefaultButton();this._uiInsertButton(button,section,index);return;}
if(src==='remove'){button=e.button;this._unMapButton(button,section);this._updateDefaultButton();this._uiRemoveButton(button,section);return;}
this._mapButtons(buttons);this._updateDefaultButton();this._uiSetButtons(buttons);},_afterContentChangeButtons:function(e){var src=e.src,pos=e.stdModPosition,replace=!pos||pos===WidgetStdMod.REPLACE;if(replace&&src!=='buttons'&&src!==Widget.UI_SRC){this._uiSetButtons(this.get('buttons'));}},_afterDefaultButtonChange:function(e){this._uiSetDefaultButton(e.newVal,e.prevVal);},_afterVisibleChangeButtons:function(e){this._uiSetVisibleButtons(e.newVal);}};Y.WidgetButtons=WidgetButtons;},'3.15.0',{"requires":["button-plugin","cssbutton","widget-stdmod"]});