/*
     YUI 3.15.0 (build 834026e)
     Copyright 2014 Yahoo! Inc. All rights reserved.
     Licensed under the BSD License.
     http://yuilibrary.com/license/
     */
YUI.add('gesture-simulate',function(Y,NAME){var NAME="gesture-simulate",SUPPORTS_TOUCH=((Y.config.win&&("ontouchstart"in Y.config.win))&&!(Y.UA.phantomjs)&&!(Y.UA.chrome&&Y.UA.chrome<6)),gestureNames={tap:1,doubletap:1,press:1,move:1,flick:1,pinch:1,rotate:1},touchEvents={touchstart:1,touchmove:1,touchend:1,touchcancel:1},document=Y.config.doc,emptyTouchList,EVENT_INTERVAL=20,START_PAGEX,START_PAGEY,DEFAULTS={HOLD_TAP:10,DELAY_TAP:10,HOLD_PRESS:3000,MIN_HOLD_PRESS:1000,MAX_HOLD_PRESS:60000,DISTANCE_MOVE:200,DURATION_MOVE:1000,MAX_DURATION_MOVE:5000,MIN_VELOCITY_FLICK:1.3,DISTANCE_FLICK:200,DURATION_FLICK:1000,MAX_DURATION_FLICK:5000,DURATION_PINCH:1000},TOUCH_START='touchstart',TOUCH_MOVE='touchmove',TOUCH_END='touchend',GESTURE_START='gesturestart',GESTURE_CHANGE='gesturechange',GESTURE_END='gestureend',MOUSE_UP='mouseup',MOUSE_MOVE='mousemove',MOUSE_DOWN='mousedown',MOUSE_CLICK='click',MOUSE_DBLCLICK='dblclick',X_AXIS='x',Y_AXIS='y';function Simulations(node){if(!node){Y.error(NAME+': invalid target node');}
this.node=node;this.target=Y.Node.getDOMNode(node);var startXY=this.node.getXY(),dims=this._getDims();START_PAGEX=startXY[0]+(dims[0])/2;START_PAGEY=startXY[1]+(dims[1])/2;}
Simulations.prototype={_toRadian:function(deg){return deg*(Math.PI/180);},_getDims:function(){var region,width,height;if(this.target.getBoundingClientRect){region=this.target.getBoundingClientRect();if("height"in region){height=region.height;}else{height=Math.abs(region.bottom-region.top);}
if("width"in region){width=region.width;}else{width=Math.abs(region.right-region.left);}}else{region=this.node.get("region");width=region.width;height=region.height;}
return[width,height];},_calculateDefaultPoint:function(point){var height;if(!Y.Lang.isArray(point)||point.length===0){point=[START_PAGEX,START_PAGEY];}else{if(point.length==1){height=this._getDims[1];point[1]=height/2;}
point[0]=this.node.getX()+point[0];point[1]=this.node.getY()+point[1];}
return point;},rotate:function(cb,center,startRadius,endRadius,duration,start,rotation){var radius,r1=startRadius,r2=endRadius;if(!Y.Lang.isNumber(r1)||!Y.Lang.isNumber(r2)||r1<0||r2<0){radius=(this.target.offsetWidth<this.target.offsetHeight)?this.target.offsetWidth/4:this.target.offsetHeight/4;r1=radius;r2=radius;}
if(!Y.Lang.isNumber(rotation)){Y.error(NAME+'Invalid rotation detected.');}
this.pinch(cb,center,r1,r2,duration,start,rotation);},pinch:function(cb,center,startRadius,endRadius,duration,start,rotation){var eventQueue,i,interval=EVENT_INTERVAL,touches,id=0,r1=startRadius,r2=endRadius,radiusPerStep,centerX,centerY,startScale,endScale,scalePerStep,startRot,endRot,rotPerStep,path1={start:[],end:[]},path2={start:[],end:[]},steps,touchMove;center=this._calculateDefaultPoint(center);if(!Y.Lang.isNumber(r1)||!Y.Lang.isNumber(r2)||r1<0||r2<0){Y.error(NAME+'Invalid startRadius and endRadius detected.');}
if(!Y.Lang.isNumber(duration)||duration<=0){duration=DEFAULTS.DURATION_PINCH;}
if(!Y.Lang.isNumber(start)){start=0.0;}else{start=start%360;while(start<0){start+=360;}}
if(!Y.Lang.isNumber(rotation)){rotation=0.0;}
Y.AsyncQueue.defaults.timeout=interval;eventQueue=new Y.AsyncQueue();centerX=center[0];centerY=center[1];startRot=start;endRot=start+rotation;path1.start=[centerX+r1*Math.sin(this._toRadian(startRot)),centerY-r1*Math.cos(this._toRadian(startRot))];path1.end=[centerX+r2*Math.sin(this._toRadian(endRot)),centerY-r2*Math.cos(this._toRadian(endRot))];path2.start=[centerX-r1*Math.sin(this._toRadian(startRot)),centerY+r1*Math.cos(this._toRadian(startRot))];path2.end=[centerX-r2*Math.sin(this._toRadian(endRot)),centerY+r2*Math.cos(this._toRadian(endRot))];startScale=1.0;endScale=endRadius/startRadius;eventQueue.add({fn:function(){var coord1,coord2,coord,touches;coord1={pageX:path1.start[0],pageY:path1.start[1],clientX:path1.start[0],clientY:path1.start[1]};coord2={pageX:path2.start[0],pageY:path2.start[1],clientX:path2.start[0],clientY:path2.start[1]};touches=this._createTouchList([Y.merge({identifier:(id++)},coord1),Y.merge({identifier:(id++)},coord2)]);coord={pageX:(path1.start[0]+path2.start[0])/2,pageY:(path1.start[0]+path2.start[1])/2,clientX:(path1.start[0]+path2.start[0])/2,clientY:(path1.start[0]+path2.start[1])/2};this._simulateEvent(this.target,TOUCH_START,Y.merge({touches:touches,targetTouches:touches,changedTouches:touches,scale:startScale,rotation:startRot},coord));if(Y.UA.ios>=2.0){this._simulateEvent(this.target,GESTURE_START,Y.merge({scale:startScale,rotation:startRot},coord));}},timeout:0,context:this});steps=Math.floor(duration/interval);radiusPerStep=(r2-r1)/steps;scalePerStep=(endScale-startScale)/steps;rotPerStep=(endRot-startRot)/steps;touchMove=function(step){var radius=r1+(radiusPerStep)*step,px1=centerX+radius*Math.sin(this._toRadian(startRot+rotPerStep*step)),py1=centerY-radius*Math.cos(this._toRadian(startRot+rotPerStep*step)),px2=centerX-radius*Math.sin(this._toRadian(startRot+rotPerStep*step)),py2=centerY+radius*Math.cos(this._toRadian(startRot+rotPerStep*step)),px=(px1+px2)/2,py=(py1+py2)/2,coord1,coord2,coord,touches;coord1={pageX:px1,pageY:py1,clientX:px1,clientY:py1};coord2={pageX:px2,pageY:py2,clientX:px2,clientY:py2};touches=this._createTouchList([Y.merge({identifier:(id++)},coord1),Y.merge({identifier:(id++)},coord2)]);coord={pageX:px,pageY:py,clientX:px,clientY:py};this._simulateEvent(this.target,TOUCH_MOVE,Y.merge({touches:touches,targetTouches:touches,changedTouches:touches,scale:startScale+scalePerStep*step,rotation:startRot+rotPerStep*step},coord));if(Y.UA.ios>=2.0){this._simulateEvent(this.target,GESTURE_CHANGE,Y.merge({scale:startScale+scalePerStep*step,rotation:startRot+rotPerStep*step},coord));}};for(i=0;i<steps;i++){eventQueue.add({fn:touchMove,args:[i],context:this});}
eventQueue.add({fn:function(){var emptyTouchList=this._getEmptyTouchList(),coord1,coord2,coord,touches;coord1={pageX:path1.end[0],pageY:path1.end[1],clientX:path1.end[0],clientY:path1.end[1]};coord2={pageX:path2.end[0],pageY:path2.end[1],clientX:path2.end[0],clientY:path2.end[1]};touches=this._createTouchList([Y.merge({identifier:(id++)},coord1),Y.merge({identifier:(id++)},coord2)]);coord={pageX:(path1.end[0]+path2.end[0])/2,pageY:(path1.end[0]+path2.end[1])/2,clientX:(path1.end[0]+path2.end[0])/2,clientY:(path1.end[0]+path2.end[1])/2};if(Y.UA.ios>=2.0){this._simulateEvent(this.target,GESTURE_END,Y.merge({scale:endScale,rotation:endRot},coord));}
this._simulateEvent(this.target,TOUCH_END,Y.merge({touches:emptyTouchList,targetTouches:emptyTouchList,changedTouches:touches,scale:endScale,rotation:endRot},coord));},context:this});if(cb&&Y.Lang.isFunction(cb)){eventQueue.add({fn:cb,context:this.node});}
eventQueue.run();},tap:function(cb,point,times,hold,delay){var eventQueue=new Y.AsyncQueue(),emptyTouchList=this._getEmptyTouchList(),touches,coord,i,touchStart,touchEnd;point=this._calculateDefaultPoint(point);if(!Y.Lang.isNumber(times)||times<1){times=1;}
if(!Y.Lang.isNumber(hold)){hold=DEFAULTS.HOLD_TAP;}
if(!Y.Lang.isNumber(delay)){delay=DEFAULTS.DELAY_TAP;}
coord={pageX:point[0],pageY:point[1],clientX:point[0],clientY:point[1]};touches=this._createTouchList([Y.merge({identifier:0},coord)]);touchStart=function(){this._simulateEvent(this.target,TOUCH_START,Y.merge({touches:touches,targetTouches:touches,changedTouches:touches},coord));};touchEnd=function(){this._simulateEvent(this.target,TOUCH_END,Y.merge({touches:emptyTouchList,targetTouches:emptyTouchList,changedTouches:touches},coord));};for(i=0;i<times;i++){eventQueue.add({fn:touchStart,context:this,timeout:(i===0)?0:delay});eventQueue.add({fn:touchEnd,context:this,timeout:hold});}
if(times>1&&!SUPPORTS_TOUCH){eventQueue.add({fn:function(){this._simulateEvent(this.target,MOUSE_DBLCLICK,coord);},context:this});}
if(cb&&Y.Lang.isFunction(cb)){eventQueue.add({fn:cb,context:this.node});}
eventQueue.run();},flick:function(cb,point,axis,distance,duration){var path;point=this._calculateDefaultPoint(point);if(!Y.Lang.isString(axis)){axis=X_AXIS;}else{axis=axis.toLowerCase();if(axis!==X_AXIS&&axis!==Y_AXIS){Y.error(NAME+'(flick): Only x or y axis allowed');}}
if(!Y.Lang.isNumber(distance)){distance=DEFAULTS.DISTANCE_FLICK;}
if(!Y.Lang.isNumber(duration)){duration=DEFAULTS.DURATION_FLICK;}else{if(duration>DEFAULTS.MAX_DURATION_FLICK){duration=DEFAULTS.MAX_DURATION_FLICK;}}
if(Math.abs(distance)/duration<DEFAULTS.MIN_VELOCITY_FLICK){duration=Math.abs(distance)/DEFAULTS.MIN_VELOCITY_FLICK;}
path={start:Y.clone(point),end:[(axis===X_AXIS)?point[0]+distance:point[0],(axis===Y_AXIS)?point[1]+distance:point[1]]};this._move(cb,path,duration);},move:function(cb,path,duration){var convertedPath;if(!Y.Lang.isObject(path)){path={point:this._calculateDefaultPoint([]),xdist:DEFAULTS.DISTANCE_MOVE,ydist:0};}else{if(!Y.Lang.isArray(path.point)){path.point=this._calculateDefaultPoint([]);}else{path.point=this._calculateDefaultPoint(path.point);}
if(!Y.Lang.isNumber(path.xdist)){path.xdist=DEFAULTS.DISTANCE_MOVE;}
if(!Y.Lang.isNumber(path.ydist)){path.ydist=0;}}
if(!Y.Lang.isNumber(duration)){duration=DEFAULTS.DURATION_MOVE;}else{if(duration>DEFAULTS.MAX_DURATION_MOVE){duration=DEFAULTS.MAX_DURATION_MOVE;}}
convertedPath={start:Y.clone(path.point),end:[path.point[0]+path.xdist,path.point[1]+path.ydist]};this._move(cb,convertedPath,duration);},_move:function(cb,path,duration){var eventQueue,i,interval=EVENT_INTERVAL,steps,stepX,stepY,id=0,touchMove;if(!Y.Lang.isNumber(duration)){duration=DEFAULTS.DURATION_MOVE;}else{if(duration>DEFAULTS.MAX_DURATION_MOVE){duration=DEFAULTS.MAX_DURATION_MOVE;}}
if(!Y.Lang.isObject(path)){path={start:[START_PAGEX,START_PAGEY],end:[START_PAGEX+DEFAULTS.DISTANCE_MOVE,START_PAGEY]};}else{if(!Y.Lang.isArray(path.start)){path.start=[START_PAGEX,START_PAGEY];}
if(!Y.Lang.isArray(path.end)){path.end=[START_PAGEX+DEFAULTS.DISTANCE_MOVE,START_PAGEY];}}
Y.AsyncQueue.defaults.timeout=interval;eventQueue=new Y.AsyncQueue();eventQueue.add({fn:function(){var coord={pageX:path.start[0],pageY:path.start[1],clientX:path.start[0],clientY:path.start[1]},touches=this._createTouchList([Y.merge({identifier:(id++)},coord)]);this._simulateEvent(this.target,TOUCH_START,Y.merge({touches:touches,targetTouches:touches,changedTouches:touches},coord));},timeout:0,context:this});steps=Math.floor(duration/interval);stepX=(path.end[0]-path.start[0])/steps;stepY=(path.end[1]-path.start[1])/steps;touchMove=function(step){var px=path.start[0]+(stepX*step),py=path.start[1]+(stepY*step),coord={pageX:px,pageY:py,clientX:px,clientY:py},touches=this._createTouchList([Y.merge({identifier:(id++)},coord)]);this._simulateEvent(this.target,TOUCH_MOVE,Y.merge({touches:touches,targetTouches:touches,changedTouches:touches},coord));};for(i=0;i<steps;i++){eventQueue.add({fn:touchMove,args:[i],context:this});}
eventQueue.add({fn:function(){var coord={pageX:path.end[0],pageY:path.end[1],clientX:path.end[0],clientY:path.end[1]},touches=this._createTouchList([Y.merge({identifier:id},coord)]);this._simulateEvent(this.target,TOUCH_MOVE,Y.merge({touches:touches,targetTouches:touches,changedTouches:touches},coord));},timeout:0,context:this});eventQueue.add({fn:function(){var coord={pageX:path.end[0],pageY:path.end[1],clientX:path.end[0],clientY:path.end[1]},emptyTouchList=this._getEmptyTouchList(),touches=this._createTouchList([Y.merge({identifier:id},coord)]);this._simulateEvent(this.target,TOUCH_END,Y.merge({touches:emptyTouchList,targetTouches:emptyTouchList,changedTouches:touches},coord));},context:this});if(cb&&Y.Lang.isFunction(cb)){eventQueue.add({fn:cb,context:this.node});}
eventQueue.run();},_getEmptyTouchList:function(){if(!emptyTouchList){emptyTouchList=this._createTouchList([]);}
return emptyTouchList;},_createTouchList:function(touchPoints){var touches=[],touchList,self=this;if(!!touchPoints&&Y.Lang.isArray(touchPoints)){if(Y.UA.android&&Y.UA.android>=4.0||Y.UA.ios&&Y.UA.ios>=2.0){Y.each(touchPoints,function(point){if(!point.identifier){point.identifier=0;}
if(!point.pageX){point.pageX=0;}
if(!point.pageY){point.pageY=0;}
if(!point.screenX){point.screenX=0;}
if(!point.screenY){point.screenY=0;}
touches.push(document.createTouch(Y.config.win,self.target,point.identifier,point.pageX,point.pageY,point.screenX,point.screenY));});touchList=document.createTouchList.apply(document,touches);}else if(Y.UA.ios&&Y.UA.ios<2.0){Y.error(NAME+': No touch event simulation framework present.');}else{touchList=[];Y.each(touchPoints,function(point){if(!point.identifier){point.identifier=0;}
if(!point.clientX){point.clientX=0;}
if(!point.clientY){point.clientY=0;}
if(!point.pageX){point.pageX=0;}
if(!point.pageY){point.pageY=0;}
if(!point.screenX){point.screenX=0;}
if(!point.screenY){point.screenY=0;}
touchList.push({target:self.target,identifier:point.identifier,clientX:point.clientX,clientY:point.clientY,pageX:point.pageX,pageY:point.pageY,screenX:point.screenX,screenY:point.screenY});});touchList.item=function(i){return touchList[i];};}}else{Y.error(NAME+': Invalid touchPoints passed');}
return touchList;},_simulateEvent:function(target,type,options){var touches;if(touchEvents[type]){if(SUPPORTS_TOUCH){Y.Event.simulate(target,type,options);}else{if(this._isSingleTouch(options.touches,options.targetTouches,options.changedTouches)){type={touchstart:MOUSE_DOWN,touchmove:MOUSE_MOVE,touchend:MOUSE_UP}[type];options.button=0;options.relatedTarget=null;touches=(type===MOUSE_UP)?options.changedTouches:options.touches;options=Y.mix(options,{screenX:touches.item(0).screenX,screenY:touches.item(0).screenY,clientX:touches.item(0).clientX,clientY:touches.item(0).clientY},true);Y.Event.simulate(target,type,options);if(type==MOUSE_UP){Y.Event.simulate(target,MOUSE_CLICK,options);}}else{Y.error("_simulateEvent(): Event '"+type+"' has multi touch objects that can't be simulated in your platform.");}}}else{Y.Event.simulate(target,type,options);}},_isSingleTouch:function(touches,targetTouches,changedTouches){return(touches&&(touches.length<=1))&&(targetTouches&&(targetTouches.length<=1))&&(changedTouches&&(changedTouches.length<=1));}};Y.GestureSimulation=Simulations;Y.GestureSimulation.defaults=DEFAULTS;Y.GestureSimulation.GESTURES=gestureNames;Y.Event.simulateGesture=function(node,name,options,cb){node=Y.one(node);var sim=new Y.GestureSimulation(node);name=name.toLowerCase();if(!cb&&Y.Lang.isFunction(options)){cb=options;options={};}
options=options||{};if(gestureNames[name]){switch(name){case'tap':sim.tap(cb,options.point,options.times,options.hold,options.delay);break;case'doubletap':sim.tap(cb,options.point,2);break;case'press':if(!Y.Lang.isNumber(options.hold)){options.hold=DEFAULTS.HOLD_PRESS;}else if(options.hold<DEFAULTS.MIN_HOLD_PRESS){options.hold=DEFAULTS.MIN_HOLD_PRESS;}else if(options.hold>DEFAULTS.MAX_HOLD_PRESS){options.hold=DEFAULTS.MAX_HOLD_PRESS;}
sim.tap(cb,options.point,1,options.hold);break;case'move':sim.move(cb,options.path,options.duration);break;case'flick':sim.flick(cb,options.point,options.axis,options.distance,options.duration);break;case'pinch':sim.pinch(cb,options.center,options.r1,options.r2,options.duration,options.start,options.rotation);break;case'rotate':sim.rotate(cb,options.center,options.r1,options.r2,options.duration,options.start,options.rotation);break;}}else{Y.error(NAME+': Not a supported gesture simulation: '+name);}};},'3.15.0',{"requires":["async-queue","event-simulate","node-screen"]});