/*
     YUI 3.15.0 (build 834026e)
     Copyright 2014 Yahoo! Inc. All rights reserved.
     Licensed under the BSD License.
     http://yuilibrary.com/license/
     */
YUI.add('timers',function(Y,NAME){var module={},global=Y.config.global;function require(mod){return Queue;}"use strict";module.exports=Queue;function Queue(capacity){this.capacity=this.snap(capacity);this.length=0;this.front=0;this.initialize();}
Queue.prototype.push=function(value){var length=this.length;if(this.capacity<=length){this.grow(this.snap(this.capacity*this.growFactor));}
var index=(this.front+length)&(this.capacity-1);this[index]=value;this.length=length+1;};Queue.prototype.shift=function(){var front=this.front;var result=this[front];this[front]=void 0;this.front=(front+1)&(this.capacity-1);this.length--;return result;};Queue.prototype.grow=function(capacity){var oldFront=this.front;var oldCapacity=this.capacity;var oldQueue=new Array(oldCapacity);var length=this.length;copy(this,0,oldQueue,0,oldCapacity);this.capacity=capacity;this.initialize();this.front=0;if(oldFront+length<=oldCapacity){copy(oldQueue,oldFront,this,0,length);}else{var lengthBeforeWrapping=length-((oldFront+length)&(oldCapacity-1));copy(oldQueue,oldFront,this,0,lengthBeforeWrapping);copy(oldQueue,0,this,lengthBeforeWrapping,length-lengthBeforeWrapping);}};Queue.prototype.initialize=function(){var length=this.capacity;for(var i=0;i<length;++i){this[i]=void 0;}};Queue.prototype.snap=function(capacity){if(typeof capacity!=="number"){return this.minCapacity;}
return pow2AtLeast(Math.min(this.maxCapacity,Math.max(this.minCapacity,capacity)));};Queue.prototype.maxCapacity=(1<<30)|0;Queue.prototype.minCapacity=16;Queue.prototype.growFactor=8;function copy(source,sourceIndex,target,targetIndex,length){for(var index=0;index<length;++index){target[index+targetIndex]=source[index+sourceIndex];}}
function pow2AtLeast(n){n=n>>>0;n=n-1;n=n|(n>>1);n=n|(n>>2);n=n|(n>>4);n=n|(n>>8);n=n|(n>>16);return n+1;}"use strict";var Queue=require("./queue");var queue=new Queue(1024);var flushing=false;var requestFlush=void 0;var hasSetImmediate=typeof setImmediate==="function";var domain;var process=global.process;var isNodeJS=!!process&&({}).toString.call(process)==="[object process]";function flush(){while(queue.length>0){var task=queue.shift();try{task.call();}catch(e){if(isNodeJS){requestFlush();throw e;}else{setTimeout(function(){throw e;},0);}}}
flushing=false;}
if(isNodeJS){requestFlush=function(){var currentDomain=process.domain;if(currentDomain){domain=domain||(1,require)("domain");domain.active=process.domain=null;}
if(flushing&&hasSetImmediate){setImmediate(flush);}else{process.nextTick(flush);}
if(currentDomain){domain.active=process.domain=currentDomain;}};}else if(hasSetImmediate){requestFlush=function(){setImmediate(flush);};}else if(typeof MessageChannel!=="undefined"){var channel=new MessageChannel();channel.port1.onmessage=function(){requestFlush=requestPortFlush;channel.port1.onmessage=flush;flush();};var requestPortFlush=function(){channel.port2.postMessage(0);};requestFlush=function(){setTimeout(flush,0);requestPortFlush();};}else{requestFlush=function(){setTimeout(flush,0);};}
function asap(task){if(isNodeJS&&process.domain){task=process.domain.bind(task);}
queue.push(task);if(!flushing){requestFlush();flushing=true;}};module.exports=asap;function soon(callbackFunction){var canceled;soon._asynchronizer(function(){if(!canceled){callbackFunction();}});return{cancel:function(){canceled=1;}};}
soon._asynchronizer=asap;soon._impl='asap';Y.soon=soon;},'3.15.0',{"requires":["yui-base"]});