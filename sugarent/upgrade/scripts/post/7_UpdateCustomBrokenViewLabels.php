<?php
/*
 * Your installation or use of this SugarCRM file is subject to the applicable
 * terms available at
 * http://support.sugarcrm.com/06_Customer_Center/10_Master_Subscription_Agreements/.
 * If you do not agree to all of the applicable terms or do not have the
 * authority to bind the entity as an authorized representative, then do not
 * install or use this SugarCRM file.
 *
 * Copyright (C) SugarCRM Inc. All rights reserved.
 */
/**
 * Remove known smarty template labels in custom modules
 */
class SugarUpgradeUpdateCustomBrokenViewLabels extends UpgradeScript
{
    public $order = 7500;
    public $type = self::UPGRADE_CUSTOM;
    public $version = '7.2';

    public $labelPattern = '/\{\$MOD.(.*)|strip_semicolon/';
    public $foundPattern = false;

    public function run()
    {
        if (version_compare($this->from_version, '7.0', '<') || version_compare($this->from_version, '7.2', '>=')) {
            // only need to run this upgrading from 7.0 - 7.2
            return;
        }
        foreach (glob('custom/modules/*/clients/base/views/record/record.php') as $recordFile) {
            $this->foundPattern = false;
            $viewdef = null;
            include($recordFile);
            if (!empty($viewdefs)) {
                $module = key($viewdefs);
                $array = $viewdefs[$module]['base']['view']['record'];
                $this->fixLabels($array);
                if ($this->foundPattern) {
                    $this->log("Removing Smarty labels from file $recordFile");
                    sugar_file_put_contents($recordFile, "<?php\n\n/* This file was generated by the 7_UpdateCustomBrokenViewLabels upgrader */\n\$viewdefs['{$module}']['base']['view']['record'] =  " . var_export($array, true) . ";\n");
                }
            }
            $viewdefs = null;
        }
    }

    /**
     * loop over view, find labels that match pattern and remove them
     * @param array $arr
     */
    public function fixLabels(&$arr)
    {
        foreach ($arr as $key => $val) {
            if (is_array($val)) {
                $this->fixLabels($arr[$key]);
            } elseif ($key === 'label' && preg_match($this->labelPattern, $val)) {
                unset($arr[$key]);
                $this->foundPattern = true;
            }
        }
    }

}
