/*
     * Your installation or use of this SugarCRM file is subject to the applicable
     * terms available at
     * http://support.sugarcrm.com/06_Customer_Center/10_Master_Subscription_Agreements/.
     * If you do not agree to all of the applicable terms or do not have the
     * authority to bind the entity as an authorized representative, then do not
     * install or use this SugarCRM file.
     *
     * Copyright (C) SugarCRM Inc. All rights reserved.
     */
({className:'filter-view search',plugins:['QuickSearchFilter'],events:{'click .add-on.fa-times':function(){this.trigger('filter:clear:quicksearch');}},filters:null,initialize:function(opts){var filterLayout=app.view._getController({type:'layout',name:'filter'});filterLayout.loadedModules=filterLayout.loadedModules||{};app.view.Layout.prototype.initialize.call(this,opts);this.layoutType=app.utils.deepCopy(this.options.meta.layoutType)||this.context.get('layout')||this.context.get('layoutName')||app.controller.context.get('layout');this.aclToCheck=(this.layoutType==='record')?'view':'list';if(this.layoutType==='records'){this.context.set('skipFetch',true);}else{if(this.context.parent){this.context.parent.set('skipFetch',true);}
this.context.on('context:child:add',function(childCtx){if(childCtx.get('link')){childCtx.set('skipFetch',true);}},this);}
this.on('filter:apply',this.applyFilter,this);this.on('filter:create:close',function(){if(!this.createPanelIsOpen()){return;}
this.layout.trigger('filter:create:close');if(this.getLastFilter(this.layout.currentModule,this.layoutType)==='create'){this.clearLastFilter(this.layout.currentModule,this.layoutType);this.layout.trigger("filter:reinitialize");}
this.context.editingFilter=null;},this);this.on('filter:create:open',function(filterModel){this.context.editingFilter=filterModel;this.layout.trigger('filter:create:open',filterModel);},this);this.on('subpanel:change',function(linkName){this.layout.trigger('subpanel:change',linkName);},this);this.on('filter:get',this.initializeFilterState,this);this.on('filter:change:filter',this.handleFilterChange,this);this.layout.on('filter:apply',function(query,def){this.trigger('filter:apply',query,def);},this);this.layout.on('filterpanel:change',this.handleFilterPanelChange,this);this.layout.on('filterpanel:toggle:button',this.toggleFilterButton,this);this.context.on('filter:add',this.addFilter,this);this.layout.on('filter:remove',this.removeFilter,this);this.layout.on('filter:reinitialize',function(){this.initializeFilterState(this.layout.currentModule,this.layout.currentLink);},this);this.listenTo(app.events,'dashlet:filter:save',this.refreshDropdown);},refreshDropdown:function(module){if(module===this.layout.currentModule){var filterLayout=app.view._getController({type:'layout',name:'filter'});filterLayout.loadedModules[module]=false;this.layout.trigger('filter:reinitialize');}},removeFilter:function(model){this.filters.collection.remove(model);this.context.set('currentFilterId',null);this.clearLastFilter(this.layout.currentModule,this.layoutType);this.layout.trigger('filter:reinitialize');},setLastFilter:function(filterModule,layoutName,filterId){var filterOptions=this.context.get('filterOptions')||{};this.context.set('currentFilterId',filterId);if(filterOptions.stickiness!==false){var key=app.user.lastState.key('last-'+filterModule+'-'+layoutName,this);app.user.lastState.set(key,filterId);}},getLastFilter:function(filterModule,layoutName){var filter=this.context.get('currentFilterId');if(!_.isEmpty(filter)){return filter;}
var filterOptions=this.context.get('filterOptions')||{};if(filterOptions.stickiness!==false){var key=app.user.lastState.key('last-'+filterModule+'-'+layoutName,this);filter=app.user.lastState.get(key);}
if(_.isEmpty(filter)&&filterOptions.initial_filter){filter=filterOptions.initial_filter;}
this.context.set('currentFilterId',filter);return filter;},clearLastFilter:function(filterModule,layoutName){var filterOptions=this.context.get('filterOptions')||{};if(filterOptions.stickiness!==false){var key=app.user.lastState.key('last-'+filterModule+'-'+layoutName,this);app.user.lastState.remove(key);}
this.clearFilterEditState();},retrieveFilterEditState:function(){var filterOptions=this.context.get('filterOptions')||{};if(filterOptions.stickiness!==false){var key=app.user.lastState.key('edit-'+this.layout.currentModule+'-'+this.layoutType,this);return app.user.lastState.get(key);}},saveFilterEditState:function(filter){var filterOptions=this.context.get('filterOptions')||{};if(filterOptions.stickiness!==false){var key=app.user.lastState.key('edit-'+this.layout.currentModule+'-'+this.layoutType,this);app.user.lastState.set(key,filter);}},clearFilterEditState:function(){var filterOptions=this.context.get('filterOptions')||{};if(filterOptions.stickiness!==false){var key=app.user.lastState.key('edit-'+this.layout.currentModule+'-'+this.layoutType,this);app.user.lastState.remove(key);}},removeDeprecatedCache:function(module){app.user.lastState.remove(app.user.lastState.key('saved-'+module,this));var layoutModule=this.module;this.module=module;app.user.lastState.remove(app.user.lastState.key('saved-filters',this));this.module=layoutModule;},addFilter:function(model){var id=model.get('id');this.filters.collection.add(model,{merge:true});this.filters.collection.trigger('cache:update',model);this.setLastFilter(this.layout.currentModule,this.layoutType,id);this.context.set('currentFilterId',id);this.clearFilterEditState();this.layout.trigger('filter:reinitialize');},toggleFilterButton:function(toggleDataView,on){var toggleButtons=this.layout.$('.toggle-actions a.btn');_.each(toggleButtons,function(btn){if($(btn).data('view')===toggleDataView){if(on){$(btn).removeAttr('disabled').removeClass('disabled');}else{$(btn).attr('disabled','disabled').addClass('disabled');$(btn).attr('title',app.lang.get('LBL_NO_DATA_AVAILABLE'));}}});},handleFilterPanelChange:function(name,silent,setLastViewed){this.showingActivities=name==='activitystream';var module=this.showingActivities?"Activities":this.module;var link;this.$el.css('visibility',app.acl.hasAccess(this.aclToCheck,module)?'visible':'hidden');if(this.layoutType==='record'&&!this.showingActivities){module=link=app.user.lastState.get(app.user.lastState.key("subpanels-last",this))||'all_modules';if(link!=='all_modules'){module=app.data.getRelatedModule(this.module,link);}}else{link=null;}
if(!silent){this.trigger("filter:render:module");this.trigger("filter:change:module",module,link);}
if(setLastViewed){this.layout.trigger('filterpanel:lastviewed:set',name);}},handleFilterChange:function(id){this.setLastFilter(this.layout.currentModule,this.layoutType,id);var filter,editState=this.retrieveFilterEditState();filter=this.filters.collection.get(id)||app.data.createBean('Filters',{module_name:this.moduleName});if(editState&&(editState.id===id||(id==='create'&&!editState.id))){filter.set(editState);}else{editState=false;}
this.context.set('currentFilterId',filter.get('id'));var editable=filter.get('editable')!==false;var isIncompleteFilter=filter.get('filter_template')&&JSON.stringify(filter.get('filter_definition'))!==JSON.stringify(filter.get('filter_template'));var isTemplateFilter=filter.get('is_template');var modelHasChanged=!_.isEmpty(filter.changedAttributes(filter.getSyncedAttributes()));if(editable&&(isIncompleteFilter||isTemplateFilter||editState||id==='create'||modelHasChanged)){this.layout.trigger('filter:set:name','');this.trigger('filter:create:open',filter);this.layout.trigger('filter:toggle:savestate',true);}else{this.layout.trigger('filter:create:close');}
var ctxList=this.getRelevantContextList();var clear=false;_.each(ctxList,function(ctx){var filterDef=filter.get('filter_definition');var orig=ctx.get('collection').origFilterDef;ctx.get('collection').origFilterDef=filterDef;if(_.isUndefined(orig)||!_.isEqual(orig,filterDef)){clear=true;}});if(clear){_.each(ctxList,function(ctx){ctx.get('collection').resetPagination();ctx.get('collection').reset(null,{silent:true});});this.trigger('filter:apply');}},applyFilter:function(query,dynamicFilterDef){var filterOptions=this.context.get('filterOptions')||{};if(filterOptions.auto_apply===false){return;}
if(_.isEmpty(query)){var filterQuicksearchView=this.getComponent('filter-quicksearch');query=filterQuicksearchView&&filterQuicksearchView.$el.val()||'';}
this._toggleClearQuickSearchIcon(!_.isEmpty(query));var massCollection=this.context.get('mass_collection');if(massCollection&&massCollection.models&&massCollection.models.length>0){massCollection.reset([],{silent:true});}
var self=this;var ctxList=this.getRelevantContextList();var relevantCtx=_.groupBy(ctxList,function(ctx){return ctx.get('collapsed')?'count':'fetch';});var batchId=relevantCtx.count&&relevantCtx.count.length>1?_.uniqueId():false;_.each(relevantCtx.count,function(ctx){var ctxCollection=ctx.get('collection');var origFilterDef=dynamicFilterDef||ctxCollection.origFilterDef||[];var filterDef=self.buildFilterDef(origFilterDef,query,ctx);var options={showAlerts:true,apiOptions:{bulk:batchId}};ctxCollection.filterDef=filterDef;ctxCollection.origFilterDef=origFilterDef;ctxCollection.resetPagination();options=_.extend(options,ctx.get('collectionOptions'));ctx.resetLoadFlag(false);ctx.set('skipFetch',true);ctx.loadData(options);ctx.resetLoadFlag(false);options.success=_.bind(function(hasAmount,properties){if(!this.disposed){ctx.trigger('refresh:count',hasAmount,properties);}},this);ctxCollection.hasAtLeast(ctx.get('limit'),options);});if(batchId){app.api.triggerBulkCall(batchId);}
batchId=relevantCtx.fetch&&relevantCtx.fetch.length>1?_.uniqueId():false;_.each(relevantCtx.fetch,function(ctx){var ctxCollection=ctx.get('collection');var origFilterDef=dynamicFilterDef||ctxCollection.origFilterDef||[];var filterDef=self.buildFilterDef(origFilterDef,query,ctx);var options={showAlerts:true,apiOptions:{bulk:batchId},success:function(collection,response,options){app.events.trigger('preview:close');}};ctxCollection.filterDef=filterDef;ctxCollection.origFilterDef=origFilterDef;ctxCollection.resetPagination();options=_.extend(options,ctx.get('collectionOptions'));ctx.resetLoadFlag(false);if(!_.isEmpty(ctx._recordListFields)){ctx.set('fields',ctx._recordListFields);}
ctx.set('skipFetch',false);ctx.loadData(options);});if(batchId){app.api.triggerBulkCall(batchId);_.each(ctxList,function(ctx){var collection=ctx.get('collection');if(collection&&collection.options&&collection.options.apiOptions){collection.options.apiOptions=undefined;}});}},getRelevantContextList:function(){var contextList=[];if(this.showingActivities){_.each(this.layout._components,function(component){var ctx=component.context;if(component.name=='activitystream'&&!ctx.get('modelId')&&ctx.get('collection')){contextList.push(ctx);}});}else{if(this.layoutType==='records'){var ctx=this.context;if(!ctx.get('modelId')&&ctx.get('collection')){contextList.push(ctx);}}else{_.each(this.context.children,function(ctx){if(ctx.get('isSubpanel')&&!ctx.get('hidden')&&!ctx.get('modelId')&&ctx.get('collection')){contextList.push(ctx);}});}}
return _.uniq(contextList);},buildFilterDef:function(oSelectedFilter,searchTerm,context){var selectedFilter=app.utils.deepCopy(oSelectedFilter),isSelectedFilter=_.size(selectedFilter)>0,module=context.get('module'),searchFilter=this.getFilterDef(module,searchTerm),isSearchFilter=_.size(searchFilter)>0;selectedFilter=_.isArray(selectedFilter)?selectedFilter:[selectedFilter];var specialField=/^\$/,meta=app.metadata.getModule(module);selectedFilter=_.filter(selectedFilter,function(def){var fieldName=_.keys(def).pop();return specialField.test(fieldName)||meta.fields[fieldName];},this);if(isSelectedFilter&&isSearchFilter){selectedFilter.push(searchFilter[0]);return[{'$and':selectedFilter}];}else if(isSelectedFilter){return selectedFilter;}else if(isSearchFilter){return searchFilter;}
return[];},initializeFilterState:function(moduleName,linkName,filterId){if(this.showingActivities){moduleName='Activities';linkName=null;}else{moduleName=moduleName||this.module;if(this.layoutType==='record'){linkName=app.user.lastState.get(app.user.lastState.key('subpanels-last',this))||linkName||'all_modules';if(linkName!=='all_modules'&&this.layout.module===moduleName){moduleName=app.data.getRelatedModule(moduleName,linkName)||moduleName;}}}
filterId=filterId||this.getLastFilter(moduleName,this.layoutType);this.layout.trigger('filterpanel:change:module',moduleName,linkName);this.trigger('filter:change:module',moduleName,linkName,true);this.getFilters(moduleName,filterId);},getFilters:function(moduleName,defaultId){if(moduleName==='all_modules'){this.selectFilter('all_records');return;}
var filterOptions=this.context.get('filterOptions')||{};if(this.filters){this.filters.dispose();}
this.removeDeprecatedCache(moduleName);this.filters=app.data.createBeanCollection('Filters');this.filters.setModuleName(moduleName);this.filters.setFilterOptions(filterOptions);this.filters.load({success:_.bind(function(){if(this.disposed){return;}
defaultId=defaultId||this.filters.collection.defaultFilterFromMeta;this.selectFilter(defaultId);},this)});},selectFilter:function(filterId){var possibleFilters,selectedFilterId=filterId;if(selectedFilterId!=='create'){possibleFilters=[selectedFilterId,this.filters.collection.defaultFilterFromMeta,'all_records'];possibleFilters=_.filter(possibleFilters,this.filters.collection.get,this.filters.collection);selectedFilterId=_.first(possibleFilters);}
this.trigger('filter:render:filter');this.trigger('filter:select:filter',selectedFilterId);return selectedFilterId;},createPanelIsOpen:function(){return!this.layout.$(".filter-options").is(":hidden");},canCreateFilter:function(){var contexts=this.getRelevantContextList(),creatable=app.acl.hasAccess("create","Filters"),meta;if(creatable&&contexts.length===1){meta=app.metadata.getModule(contexts[0].get("module"));if(meta&&_.isObject(meta.filters)){_.each(meta.filters,function(value){if(_.isObject(value)){creatable=creatable&&value.meta.create!==false;}});}}
return creatable;},_toggleClearQuickSearchIcon:function(addIt){if(addIt&&!this.$('.fa-times.add-on')[0]){this.$el.append('<i class="fa fa-times add-on"></i>');}else if(!addIt){this.$('.fa-times.add-on').remove();}},_render:function(){if(app.acl.hasAccess(this.aclToCheck,this.module)){app.view.Layout.prototype._render.call(this);}},unbind:function(){if(this.filters){this.filters.dispose();}
this.filters=null;app.view.Layout.prototype.unbind.call(this);}})