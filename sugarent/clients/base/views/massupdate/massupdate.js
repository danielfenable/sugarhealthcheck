/*
     * Your installation or use of this SugarCRM file is subject to the applicable
     * terms available at
     * http://support.sugarcrm.com/06_Customer_Center/10_Master_Subscription_Agreements/.
     * If you do not agree to all of the applicable terms or do not have the
     * authority to bind the entity as an authorized representative, then do not
     * install or use this SugarCRM file.
     *
     * Copyright (C) SugarCRM Inc. All rights reserved.
     */
({events:{'click [data-action="add"]':'addItem','click [data-action="remove"]':'removeItem','click .btn[name=update_button]':'saveClicked','click .btn.cancel_button':'cancelClicked'},visible:false,fieldOptions:null,fieldValues:null,defaultOption:null,fieldPlaceHolderTag:'[name=fieldPlaceHolder]',massUpdateViewName:'massupdate-progress',className:'extend',plugins:['Tooltip'],_defaultSettings:{max_records_to_merge:5,mass_delete_chunk_size:20,mass_update_chunk_size:500},fallbackFieldTemplate:'edit',initialize:function(options){var genericMeta=_.omit(app.metadata.getView(null,options.name),'panels');options.meta=_.extend({},genericMeta,options.meta);this.fieldValues=[{}];this.setMetadata(options);this._super('initialize',[options]);this._initSettings();this.setDefault();this.delegateListFireEvents();this.before('render',this.isVisible);app.routing.before("route",this.beforeRouteDelete,this,true);$(window).on("beforeunload.delete"+this.cid,_.bind(this.warnDeleteOnRefresh,this));},_initSettings:function(){var configSettings={};if(app.config.massActions){if(app.config.massActions.massDeleteChunkSize){configSettings.mass_delete_chunk_size=app.config.massActions.massDeleteChunkSize;}
if(app.config.massActions.massUpdateChunkSize){configSettings.mass_update_chunk_size=app.config.massActions.massUpdateChunkSize;}}
this._settings=_.extend({},this._defaultSettings,configSettings,this.meta&&this.meta.settings||{});return this;},delegateListFireEvents:function(){this.layout.on("list:massupdate:fire",this.show,this);this.layout.on("list:massaction:hide",this.hide,this);this.layout.on("list:massdelete:fire",this.warnDelete,this);this.layout.on("list:massexport:fire",this.massExport,this);this.layout.on("list:updatecalcfields:fire",this.updateCalcFields,this);},setMetadata:function(options){var fieldList,massFields=[],metadataModule=app.metadata.getModule(options.module);if(!metadataModule){app.logger.error('Failed to get module '+options.module);return;}
options.meta.panels=options.meta.panels||[{fields:[]}];fieldList=metadataModule.fields;if(!_.isEmpty(options.meta.panels[0].fields)){fieldList=_.map(options.meta.panels[0].fields,function(fieldDef){var def=_.extend({},fieldList[fieldDef.name],fieldDef);return def;});}
_.each(fieldList,function(field){if(!field.massupdate||field.readonly){return;}
var cloneField=app.utils.deepCopy(field);cloneField.label=cloneField.label||cloneField.vname;if(cloneField.type==='multienum'){cloneField.type='enum';}
massFields.push(cloneField);});options.meta.panels[0].fields=massFields;},_render:function(){var result=app.view.View.prototype._render.call(this),self=this;if(this.$(".select2.mu_attribute")){this.$(".select2.mu_attribute").select2({width:'100%',minimumResultsForSearch:5}).on("change",function(evt){var $el=$(this),name=$el.select2('val'),index=$el.data('index');var option=_.find(self.fieldOptions,function(field){return field.name==name;});self.replaceUpdateField(option,index);self.placeField($el);});this.$(".select2.mu_attribute").each(function(){self.placeField($(this));});}
if(this.fields.length==0){this.hide();}
return result;},isVisible:function(){return this.visible;},placeField:function($el){var name=$el.select2('val'),index=$el.data('index'),fieldEl=this.getField(name).$el;if($el.not(".disabled")&&fieldEl){var holder=this.$(this.fieldPlaceHolderTag+"[index="+index+"]");this.$("#fieldPlaceHolders").append(holder.children());holder.html(fieldEl);}},addItem:function(evt){if(!$(evt.currentTarget).hasClass("disabled")){this.addUpdateField();this.render();}},removeItem:function(evt){var index=$(evt.currentTarget).data('index');this.removeUpdateField(index);this.render();},addUpdateField:function(){this.fieldValues.splice(this.fieldValues.length-1,0,this.defaultOption);this.defaultOption=null;this.setDefault();},removeUpdateField:function(index){var fieldValue=this.fieldValues[index];if(fieldValue){if(fieldValue.name){this.model.unset(fieldValue.name);this.fieldValues.splice(index,1);}else{var removed=this.fieldValues.splice(index-1,1);this.defaultOption=removed[0];}
this.setDefault();}},replaceUpdateField:function(selectedOption,targetIndex){var fieldValue=this.fieldValues[targetIndex];if(fieldValue.name){this.model.unset(fieldValue.name);this.fieldOptions.push(fieldValue);this.fieldValues[targetIndex]=selectedOption;}else{this.model.unset(this.defaultOption.name);this.fieldOptions.push(this.defaultOption);this.defaultOption=selectedOption;}},setDefault:function(){var assignedValues=_.pluck(this.fieldValues,'name');if(this.defaultOption){assignedValues=assignedValues.concat(this.defaultOption.name);}
this.fieldOptions=(this.meta)?_.reject(_.flatten(_.pluck(this.meta.panels,'fields')),function(field){return(field)?_.contains(assignedValues,field.name):false;}):[];this.defaultOption=this.defaultOption||this.fieldOptions.splice(0,1)[0];},getProgressView:function(){var progressView=this.layout.getComponent(this.massUpdateViewName);if(!progressView){progressView=app.view.createView({context:this.context,name:this.massUpdateViewName,layout:this.layout});this.layout._components.push(progressView);this.layout.$el.append(progressView.$el);}
progressView.render();return progressView;},getMassUpdateModel:function(baseModule){var massModel=this.context.get('mass_collection'),progressView=this.getProgressView(),massCollection=massModel?_.extend({},massModel,{defaultMethod:'update',module:'MassUpdate',baseModule:baseModule,maxAllowAttempt:3,chunks:null,discards:[],attempt:0,paused:false,_chunkSize:20,numFailures:0,setChunkSize:function(chunkSize){this._chunkSize=parseInt(chunkSize,10);},resetProgress:function(){massModel.reset();this.length=0;},updateProgress:function(){this.remove(this.chunks.splice(0));massModel.length=this.length;},updateChunk:function(){if(!this.chunks){this.chunks=this.slice(0,this._chunkSize);this.trigger('massupdate:start');}
if(_.isEmpty(this.chunks)){this.chunks=this.slice(0,this._chunkSize);}},resumeFetch:function(){if(!this._pauseOptions){return;}
this.paused=false;this.trigger('massupdate:resume');this.fetch(this._pauseOptions);},pauseFetch:function(){this.paused=true;},sync:function(default_method,model,options){if(model.paused){this._pauseOptions=options;this.trigger('massupdate:pause');return;}
this.method=options.method;this.updateChunk();var callbacks={success:function(data,response){model.numFailures+=data.failed;model.updateProgress();model.trigger('massupdate:done');if(model.length===0){model.trigger('massupdate:end');if(_.isFunction(options.success)){options.success(model,null,response);}}else{model.fetch(options);}},error:function(xhr,status,error){model.attempt++;model.trigger('massupdate:fail');if(model.attempt<=model.maxAllowAttempt){model.fetch(options);}else if(_.isFunction(options.error)){model.trigger('massupdate:end');options.error(xhr,status,error);}},complete:function(xhr,status){model.trigger('massupdate:always');if(_.isFunction(options.complete)){options.complete(xhr,status);}}},method=options.method||this.defaultMethod,data=this.getAttributes(options.attributes,method),url=app.api.buildURL(baseModule,this.module,data,options.params);app.api.call(method,url,data,callbacks);},getAttributes:function(attributes,action){return{massupdate_params:_.extend({'uid':this.getAvailableList(action)},attributes)};},getAvailableList:function(action){var action2permission={'update':'edit','delete':'delete'},list=[];_.each(this.chunks,function(model){if(app.acl.hasAccessToModel(action2permission[action],model)!==false){list.push(model.id);}else{this.discards.push(model.id);}},this);return list;}}):null;progressView.initCollection(massCollection);return massCollection;},warnDelete:function(){this._modelsToDelete=this.getMassUpdateModel(this.module);this._modelsToDelete.setChunkSize(this._settings.mass_delete_chunk_size);this._targetUrl=Backbone.history.getFragment();if(this._targetUrl!==this._currentUrl){app.router.navigate(this._currentUrl,{trigger:false,replace:true});}
this.hideAll();app.alert.show('delete_confirmation',{level:'confirmation',messages:app.lang.get('NTC_DELETE_CONFIRMATION_MULTIPLE'),onConfirm:_.bind(this.deleteModels,this),onCancel:_.bind(function(){this._modelsToDelete=null;app.router.navigate(this._targetUrl,{trigger:false,replace:true});},this)});},warnDeleteOnRefresh:function(){if(this._modelsToDelete){return app.lang.get('NTC_DELETE_CONFIRMATION_MULTIPLE');}},deleteModels:function(){var self=this,collection=self._modelsToDelete;var lastSelectedModels=_.clone(collection.models);if(collection){collection.fetch({showAlerts:false,method:'delete',error:function(){app.alert.show('error_while_mass_update',{level:'error',title:app.lang.get('ERR_INTERNAL_ERR_MSG'),messages:app.lang.get('ERR_HTTP_500_TEXT')});},success:function(data,response,options){self.layout.trigger("list:records:deleted",lastSelectedModels);var redirect=self._targetUrl!==self._currentUrl;if(options.status==='done'){self.layout.context.reloadData({showAlerts:false});}else if(options.status==='queued'){app.alert.show('jobqueue_notice',{level:'success',title:app.lang.get('LBL_MASS_UPDATE_JOB_QUEUED'),autoClose:true});}
self._modelsToDelete=null;if(redirect){self.unbindBeforeRouteDelete();app.router.navigate(self._targetUrl,{trigger:true});}}});}},beforeRouteDelete:function(){if(this._modelsToDelete){this.warnDelete(this._modelsToDelete);return false;}
return true;},updateCalcFields:function(){this.hideAll();this.save(true);},massExport:function(){this.hideAll();var massExport=this.context.get("mass_collection");if(massExport){app.alert.show('massexport_loading',{level:'process',title:app.lang.get('LBL_LOADING')});app.api.exportRecords({module:this.module,uid:massExport.pluck('id')},this.$el,{complete:function(data){app.alert.dismiss('massexport_loading');}});}},save:function(forCalcFields){forCalcFields=!!forCalcFields;var massUpdate=this.getMassUpdateModel(this.module),self=this;massUpdate.setChunkSize(this._settings.mass_update_chunk_size);this.once('massupdate:validation:complete',function(validate){var errors=validate.errors,emptyValues=validate.emptyValues,confirmMessage=app.lang.get('LBL_MASS_UPDATE_EMPTY_VALUES'),attributes=validate.attributes||this.getAttributes();this.$(".fieldPlaceHolder .error").removeClass("error");this.$(".fieldPlaceHolder .help-block").hide();if(_.isEmpty(errors)){confirmMessage+='<br>['+emptyValues.join(',')+']<br>'+app.lang.get('LBL_MASS_UPDATE_EMPTY_CONFIRM')+'<br>';if(massUpdate){var fetchMassupdate=_.bind(function(){var successMessages=this.buildSaveSuccessMessages(massUpdate);massUpdate.fetch({showAlerts:true,attributes:attributes,error:function(){app.alert.show('error_while_mass_update',{level:'error',title:app.lang.get('ERR_INTERNAL_ERR_MSG'),messages:app.lang.get('ERR_HTTP_500_TEXT')});},success:function(data,response,options){self.hide();if(options.status==='done'){self.collection.fetch({showAlerts:false,remove:true,relate:!!self.layout.collection.link});}else if(options.status==='queued'){app.alert.show('jobqueue_notice',{level:'success',messages:successMessages[options.status],autoClose:true});}}});},this);if(emptyValues.length===0){fetchMassupdate.call(this);}else{app.alert.show('empty_confirmation',{level:'confirmation',messages:confirmMessage,onConfirm:fetchMassupdate});}}}else{this.handleValidationError(errors);}},this);if(forCalcFields){this.trigger('massupdate:validation:complete',{errors:[],emptyValues:[],attributes:{}});}else{this.checkValidationError();}},buildSaveSuccessMessages:function(massUpdateModel){return{done:app.lang.get('LBL_MASS_UPDATE_SUCCESS'),queued:app.lang.get('LBL_MASS_UPDATE_JOB_QUEUED')};},getAttributes:function(){var values=[this.defaultOption].concat(this.fieldValues),attributes=[],fieldFilter=function(field){return field&&field.name;};values=_.chain(values).union(_.chain(values).pluck("fields").compact().flatten().value()).uniq(fieldFilter).filter(fieldFilter).value();_.each(values,function(value){attributes=_.union(attributes,_.values(_.pick(value,'name','id_name')));if(value.name==='parent_name'){attributes.push('parent_id','parent_type');}else if(value.name==='team_name'){attributes.push('team_name_type');}else if(value.isMultiSelect){attributes.push(value.name+'_replace');}},this);return _.pick(this.model.attributes,attributes);},checkValidationError:function(){var self=this,emptyValues=[],errors={},validator={},fields=_.initial(this.fieldValues).concat(this.defaultOption),i=0;var fieldsToValidate=_.filter(fields,function(f){return f.name;});if(_.size(fieldsToValidate)){_.each(fieldsToValidate,function(field){i++;validator={};validator[field.name]=field;field.required=(_.isBoolean(field.required)&&field.required)||(field.required&&field.required=='true')||false;var value=this.model.get(field.name);if(!_.isBoolean(value)&&!value){emptyValues.push(app.lang.get(field.label,this.model.module));this.model.set(field.name,'',{silent:true});if(field.id_name){this.model.set(field.id_name,'',{silent:true});}}
this.model._doValidate(validator,errors,function(didItFail,fields,errors,callback){if(i===_.size(fieldsToValidate)){self.trigger('massupdate:validation:complete',{errors:errors,emptyValues:emptyValues});}});},this);}else{this.trigger('massupdate:validation:complete',{errors:errors,emptyValues:emptyValues});}
return;},handleValidationError:function(errors){var self=this;_.each(errors,function(fieldErrors,fieldName){var fieldEl=self.getField(fieldName).$el,errorEl=fieldEl.find(".help-block");fieldEl.addClass("error");if(errorEl.length==0){errorEl=$("<span>").addClass("help-block");errorEl.appendTo(fieldEl);}
errorEl.show().html("");_.each(fieldErrors,function(errorContext,errorName){errorEl.append(app.error.getErrorString(errorName,errorContext));});});},show:function(){this.hideAll();this.visible=true;this.defaultOption=null;this.model.clear();var defaults=_.extend({},this.model._defaults,this.model.getDefault());this.model.set(defaults);this.setDefault();var massModel=this.context.get('mass_collection');massModel.off(null,null,this);massModel.on('add remove reset massupdate:estimate',this.setDisabled,this);massModel.on('massupdate:start massupdate:end',this.setDisabledOnUpdate,this);this.$el.show();this.render();this.createShortcutSession();this.registerShortcuts();},hideAll:function(){this.layout.trigger("list:massaction:hide");},hide:function(){if(this.disposed){return;}
this.visible=false;this.$el.hide();this.clearAndRestorePreviousShortcuts();},createShortcutSession:function(){app.shortcuts.saveSession();app.shortcuts.createSession(['MassUpdate:Add','MassUpdate:Remove','MassUpdate:Cancel','MassUpdate:Update'],this);},registerShortcuts:function(){app.shortcuts.register('MassUpdate:Add','+',function(){this.$('[data-action=add]').last().click();},this);app.shortcuts.register('MassUpdate:Remove','-',function(){this.$('[data-action=remove]').last().click();},this);app.shortcuts.register('MassUpdate:Cancel',['esc','ctrl+alt+l'],function(){this.$('a.cancel_button').click();},this,true);app.shortcuts.register('MassUpdate:Update',['ctrl+s','ctrl+alt+a'],function(){this.$('[name=update_button]:not(.disabled)').click();},this,true);},clearAndRestorePreviousShortcuts:function(){var activeShortcutSession=app.shortcuts.getCurrentSession();if(activeShortcutSession&&(activeShortcutSession.layout===this)){app.shortcuts.restoreSession();}},setDisabledOnUpdate:function(){var massUpdate=this.context.get('mass_collection');if(massUpdate.length==0){this.$('.btn[name=update_button]').removeClass('disabled');}else{this.$('.btn[name=update_button]').addClass('disabled');}},setDisabled:function(){var massUpdate=this.context.get('mass_collection');if(massUpdate.isEmpty()||massUpdate.fetched===false){this.$('.btn[name=update_button]').addClass('disabled');}else{this.$('.btn[name=update_button]').removeClass('disabled');}},saveClicked:function(evt){if(this.$(".btn[name=update_button]").hasClass("disabled")===false){this.save();}},cancelClicked:function(evt){this.hide();},unbindData:function(){var massModel=this.context.get("mass_collection");if(massModel){massModel.off(null,null,this);}
app.view.View.prototype.unbindData.call(this);},unbindBeforeRouteDelete:function(){app.routing.offBefore("route",this.beforeRouteDelete,this);$(window).off("beforeunload.delete"+this.cid);},_dispose:function(){this.unbindBeforeRouteDelete();this.$('.select2.mu_attribute').select2('destroy');app.view.View.prototype._dispose.call(this);}})