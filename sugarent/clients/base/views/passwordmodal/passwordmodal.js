/*
     * Your installation or use of this SugarCRM file is subject to the applicable
     * terms available at
     * http://support.sugarcrm.com/06_Customer_Center/10_Master_Subscription_Agreements/.
     * If you do not agree to all of the applicable terms or do not have the
     * authority to bind the entity as an authorized representative, then do not
     * install or use this SugarCRM file.
     *
     * Copyright (C) SugarCRM Inc. All rights reserved.
     */
({extendsFrom:'BaseeditmodalView',fallbackFieldTemplate:'edit',initialize:function(options){app.view.View.prototype.initialize.call(this,options);if(this.layout){this.layout.on("app:view:password:editmodal",function(){this.model=this.context.get('model');this.render();this.$('.modal').modal('show');this.model.on("error:validation",function(){this.resetButton();},this);},this);}
this.bindDataChange();},_renderHtml:function(){this.saveButtonWasClicked=false;this.events=_.clone(this.events);_.extend(this.events,{"focusin input[name=new_password]":"verifyCurrentPassword","focusin input[name=confirm_password]":"verifyCurrentPassword"});app.view.View.prototype._renderHtml.call(this);},verifyCurrentPassword:function(){var self=this,currentPassword;currentPassword=self.$('[name=current_password]').val();if(currentPassword&&currentPassword.length&&!self.saveButtonWasClicked){app.api.verifyPassword(currentPassword,{success:function(data){if(!self.checkUpdatePassWorked(data)){app.alert.show('pass_verification_failed',{level:'error',title:app.lang.get('LBL_PASSWORD',self.module),messages:app.lang.get('ERR_PASSWORD_MISMATCH',self.module)});self.$('[name=current_password]').val('');self.$('[name=current_password]').focus();}else{app.alert.dismiss('pass_verification_failed');}},error:function(error){app.error.handleHttpError(error,self);self.resetButton();}});}},handleCustomValidationError:function(field,errorMsg){field=field.parents('.control-group')
field.addClass('error');field.find('.help-block').html("");field.find('.help-block').append(errorMsg);field.find('.add-on').remove();field.find('input:last').after('<span class="add-on"><i class="fa fa-exclamation-circle"></i></span>');},setLoading:function(){this.$('[name=save_button]').attr('data-loading-text',app.lang.get('LBL_LOADING'));this.$('[name=save_button]').button('loading');},verify:function(){var self=this,currentPassword,password,confirmPassword,confirmPasswordField,isError=false,passwordField,maxLen,currentPasswordField;self.setLoading();currentPasswordField=this.$('[name=current_password]');currentPassword=currentPasswordField.val();passwordField=this.$('[name=new_password]');password=passwordField.val();confirmPasswordField=this.$('[name=confirm_password]');confirmPassword=confirmPasswordField.val();if(!currentPassword){self.handleCustomValidationError(currentPasswordField,app.lang.get('ERR_ENTER_OLD_PASSWORD',self.module));isError=true;}
if(!password){self.handleCustomValidationError(passwordField,app.lang.get('ERR_ENTER_NEW_PASSWORD',self.module));isError=true;}
if(!confirmPassword){self.handleCustomValidationError(confirmPasswordField,app.lang.get('ERR_ENTER_CONFIRMATION_PASSWORD',self.module));isError=true;}
if(password!==confirmPassword){self.setLoading();self.handleCustomValidationError(confirmPasswordField,app.lang.get('ERR_REENTER_PASSWORDS'),self.module);isError=true;}
var passwordField=self.context.get('passwordField'),mod=app.metadata.getModule(self.module);maxLen=mod[passwordField]?parseInt(mod[passwordField].len,10):0;if(maxLen>0&&confirmPassword.length>maxLen){self.handleCustomValidationError(confirmPasswordField,app.error.getErrorString('ERROR_MAX_FIELD_LENGTH',maxLen));isError=true;}
return!isError;},saveButton:function(){if(this.verify()){this.saveModel();}else{this.resetButton();}},saveModel:function(){var self=this,oldPass=self.model.get('current_password'),newPass=self.model.get('new_password');this.saveButtonWasClicked=true;app.alert.show('passreset',{level:'process',title:app.lang.get('LBL_PASSWORD',self.module),messages:app.lang.get('LBL_PROCESSING',self.module),autoClose:false});app.api.updatePassword(oldPass,newPass,{success:function(data){app.alert.dismiss('passreset');if(self.checkUpdatePassWorked(data)){self.saveComplete();}else{app.alert.show('pass_update_failed',{level:'error',title:app.lang.get('LBL_PASSWORD',self.module),messages:app.lang.get('LBL_CANNOT_SEND_PASSWORD')});self.$('.modal').modal().find('input:text, input:password').val('');self.resetButton();}},error:function(error){app.alert.dismiss('passreset');app.error.handleHttpError(error,self);self.resetButton();}});},checkUpdatePassWorked:function(data){if(!data||!data.valid){app.logger.error("Failed to update password.");return false;}
return true;},saveComplete:function(){var self=this;self.model.unset('current_password',{silent:true});self.model.unset('confirm_password',{silent:true});self.model.unset('new_password',{silent:true});self.$('.modal').modal('hide').find('form').get(0).reset();self.resetButton();app.alert.show('pass_successfully_changes',{level:'success',title:app.lang.get('LBL_PASSWORD',self.module),messages:app.lang.get('LBL_NEW_USER_PASSWORD_1',self.module),autoClose:true});}})