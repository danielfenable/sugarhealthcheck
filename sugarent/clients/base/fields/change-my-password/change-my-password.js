/*
     * Your installation or use of this SugarCRM file is subject to the applicable
     * terms available at
     * http://support.sugarcrm.com/06_Customer_Center/10_Master_Subscription_Agreements/.
     * If you do not agree to all of the applicable terms or do not have the
     * authority to bind the entity as an authorized representative, then do not
     * install or use this SugarCRM file.
     *
     * Copyright (C) SugarCRM Inc. All rights reserved.
     */
({extendsFrom:'ChangePasswordField',fieldTag:'input',initialize:function(options){this._super("initialize",[options]);app.error.errorName2Keys['current_password']='ERR_PASSWORD_MISMATCH';app.error.errorName2Keys['new_password']='ERR_ENTER_NEW_PASSWORD';this.__extendModel();},__extendModel:function(){if(this.model&&!this.model._hasChangeMyPasswordModifs){var _proto=_.clone(this.model);this.model._hasChangeMyPasswordModifs=true;this.model._doValidateCurrentPassword=function(fields,errors,callback){var field=_.find(fields,function(field){return field.type==='change-my-password';});var current=this.get(field.name+'_current_password');var password=this.get(field.name+'_new_password'),confirmation=this.get(field.name+'_confirm_password');if(_.isEmpty(current)&&_.isEmpty(password)&&_.isEmpty(confirmation)){callback(null,fields,errors);return;}
if(!_.isEmpty(current)&&_.isEmpty(password)&&_.isEmpty(confirmation)){errors[field.name]=errors[field.name]||{};errors[field.name]['new_password']=true;callback(null,fields,errors);return;}
var alertOptions={title:app.lang.get("LBL_VALIDATING"),level:"process"};app.alert.show('validation',alertOptions);app.api.verifyPassword(current,{success:function(data){if(!data||!data.valid){errors[field.name]=errors[field.name]||{};errors[field.name]['current_password']=true;}},error:function(error){errors[field.name]=errors[field.name]||{};errors[field.name]['current_password']=true;},complete:function(){app.alert.dismiss('validation');callback(null,fields,errors);}});};this.model.addValidationTask('current_password_'+this.cid,_.bind(this.model._doValidateCurrentPassword,this.model));this.model.revertAttributes=function(options){var attrs=_.clone(this.attributes);_.each(attrs,function(value,attr){if(attr.match('_current_password')){this.unset(attr);}},this);_proto.revertAttributes.call(this,options);};}},format:function(value){if(this.action==='edit'){this.currentPassword=this.model.get(this.name+'_current_password');value='';}else if(value===true){value='value_setvalue_set';}
return value;},decorateError:function(errors){var ftag=this.fieldTag;if(errors['current_password']){this.fieldTag='input[name=current_password]';app.view.Field.prototype.decorateError.call(this,{current_password:true});}
errors=_.omit(errors,'current_password');if(!_.isEmpty(errors)){this.fieldTag='input[name!=current_password]';app.view.Field.prototype.decorateError.call(this,errors);}
this.fieldTag=ftag;},clearErrorDecoration:function(){var self=this,ftag=this.fieldTag||'',$ftag=this.$(ftag);this.$('.add-on').remove();$ftag.each(function(index,el){var isWrapped=self.$(el).parent().hasClass('input-append');if(isWrapped){self.$(el).unwrap();}});this.$el.removeClass(ftag);this.$el.removeClass("error");this.$el.closest('.record-cell').removeClass("error");},_dispose:function(){this.model.removeValidationTask('current_password_'+this.cid);this._super('_dispose');}})