/*
     YUI 3.15.0 (build 834026e)
     Copyright 2014 Yahoo! Inc. All rights reserved.
     Licensed under the BSD License.
     http://yuilibrary.com/license/
     */
YUI.add('button-core',function(Y,NAME){var getClassName=Y.ClassNameManager.getClassName,AttributeCore=Y.AttributeCore;function ButtonCore(config){this.initializer(config);}
ButtonCore.prototype={TEMPLATE:'<button/>',constructor:ButtonCore,initializer:function(config){this._initNode(config);this._initAttributes(config);this._renderUI(config);},_initNode:function(config){if(config.host){this._host=Y.one(config.host);}else{this._host=Y.Node.create(this.TEMPLATE);}},_initAttributes:function(config){AttributeCore.call(this,ButtonCore.ATTRS,config);},_renderUI:function(){var node=this.getNode(),nodeName=node.get('nodeName').toLowerCase();node.addClass(ButtonCore.CLASS_NAMES.BUTTON);if(nodeName!=='button'&&nodeName!=='input'){node.set('role','button');}},enable:function(){this.set('disabled',false);},disable:function(){this.set('disabled',true);},getNode:function(){if(!this._host){this._host=this.get('boundingBox');}
return this._host;},_getLabel:function(){var node=this.getNode(),label=ButtonCore._getTextLabelFromNode(node);return label;},_getLabelHTML:function(){var node=this.getNode(),labelHTML=ButtonCore._getHTMLFromNode(node);return labelHTML;},_setLabel:function(value,name,opts){var label=Y.Escape.html(value);if(!opts||opts.src!=='internal'){this.set('labelHTML',label,{src:'internal'});}
return label;},_setLabelHTML:function(value,name,opts){var node=this.getNode(),labelNode=ButtonCore._getLabelNodeFromParent(node),nodeName=node.get('nodeName').toLowerCase();if(nodeName==='input'){labelNode.set('value',value);}
else{labelNode.setHTML(value);}
if(!opts||opts.src!=='internal'){this.set('label',value,{src:'internal'});}
return value;},_setDisabled:function(value){var node=this.getNode();node.getDOMNode().disabled=value;node.toggleClass(ButtonCore.CLASS_NAMES.DISABLED,value);return value;}};Y.mix(ButtonCore.prototype,AttributeCore.prototype);ButtonCore.ATTRS={label:{setter:'_setLabel',getter:'_getLabel',lazyAdd:false},labelHTML:{setter:'_setLabelHTML',getter:'_getLabelHTML',lazyAdd:false},disabled:{value:false,setter:'_setDisabled',lazyAdd:false}};ButtonCore.NAME="button";ButtonCore.CLASS_NAMES={BUTTON:getClassName('button'),DISABLED:getClassName('button','disabled'),SELECTED:getClassName('button','selected'),LABEL:getClassName('button','label')};ButtonCore.ARIA_STATES={PRESSED:'aria-pressed',CHECKED:'aria-checked'};ButtonCore.ARIA_ROLES={BUTTON:'button',CHECKBOX:'checkbox',TOGGLE:'toggle'};ButtonCore._getLabelNodeFromParent=function(node){var labelNode=(node.one('.'+ButtonCore.CLASS_NAMES.LABEL)||node);return labelNode;};ButtonCore._getTextLabelFromNode=function(node){var labelNode=ButtonCore._getLabelNodeFromParent(node),nodeName=labelNode.get('nodeName').toLowerCase(),label=labelNode.get(nodeName==='input'?'value':'text');return label;};ButtonCore._getHTMLFromNode=function(node){var labelNode=ButtonCore._getLabelNodeFromParent(node),label=labelNode.getHTML();return label;};ButtonCore._getDisabledFromNode=function(node){return node.get('disabled');};Y.ButtonCore=ButtonCore;},'3.15.0',{"requires":["attribute-core","classnamemanager","node-base","escape"]});